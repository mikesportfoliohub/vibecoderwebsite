{"cells":[{"cell_type":"markdown","metadata":{"id":"ToDiaFeZdT1B"},"source":["Install Ngrok, SQLAlchemy, Flask-Session.\n","\n","Mount Google Drive for File Access & setup token."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_qCaZljRw8Uu"},"outputs":[],"source":["!pip install pyngrok\n","!pip install flask_sqlalchemy\n","!pip install Flask-Session\n","\n","import os, getpass\n","\n","from google.colab import drive\n","\n","# 1. Mount Google Drive\n","drive.mount('/content/drive')\n","\n","# 2. Define where your token lives (or would live)\n","TOKEN_PATH = \"/content/drive/MyDrive/ngrok_token.txt\"\n","\n","# 3. Load or prompt\n","if os.path.exists(TOKEN_PATH):\n","    with open(TOKEN_PATH, \"r\") as f:\n","        ngrok_token = f.read().strip()\n","    print(\"Loaded Ngrok auth token from file.\")\n","else:\n","    ngrok_token = getpass.getpass(\"Enter your Ngrok auth token: \")\n","\n","# 4. Export into env so flask_ngrok can pick it up\n","os.environ[\"NGROK_AUTH_TOKEN\"] = ngrok_token\n"]},{"cell_type":"markdown","metadata":{"id":"Ksgs5yCna6hM"},"source":["Latest Server Code"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"olpsc8f6bA-e"},"outputs":[],"source":["# Core Python modules\n","import os\n","import sys\n","import random\n","import logging\n","import sqlite3\n","\n","# Flask and extensions\n","from flask import Flask, request, jsonify, render_template, session\n","from flask_session import Session\n","\n","# Third-party libraries\n","from pyngrok import ngrok\n","from werkzeug.security import generate_password_hash, check_password_hash\n","\n","logging.basicConfig(level=logging.DEBUG)\n","\n","# Define project paths\n","BASE       = \"/content/drive/MyDrive/colab-web-app\"\n","TEMPLATES  = os.path.join(BASE, \"templates\")\n","STATIC     = os.path.join(BASE, \"static\")\n","ROUTES_DIR = os.path.join(BASE, \"routes\")\n","DB_PATH    = os.path.join(BASE, \"database\", \"site.db\")\n","\n","# Confirm route folder exists\n","print(\"ROUTES folder â†’\", ROUTES_DIR)\n","!ls \"{ROUTES_DIR}\"\n","\n","# Ensure Python can import from there\n","sys.path.insert(0, ROUTES_DIR)\n","\n","# Create Flask app & register Blueprint\n","app = Flask(\n","    __name__,\n","    template_folder=TEMPLATES,\n","    static_folder=STATIC\n",")\n","\n","# Inject your DB_PATH into app.config **before** registering routes\n","app.config['DB_PATH'] = DB_PATH\n","\n","from main_routes import main_bp\n","app.register_blueprint(main_bp)\n","\n","from auth_routes import auth_bp\n","app.register_blueprint(auth_bp)\n","\n","from admin_routes import admin_bp\n","app.register_blueprint(admin_bp)\n","\n","# Session & Secret Key\n","app.config[\"SECRET_KEY\"]   = \"supersecretkey\"\n","app.config[\"SESSION_TYPE\"] = \"filesystem\"\n","Session(app)\n","\n","# Database Connection Function\n","def get_db_connection():\n","    conn = sqlite3.connect(DB_PATH)\n","    conn.row_factory = sqlite3.Row\n","    return conn\n","\n","from functools import wraps\n","from flask import session, redirect, url_for, flash\n","from flask import jsonify\n","\n","\n","# Ngrok Authentication & Tunnel Setup\n","auth_token = os.getenv(\"NGROK_AUTH_TOKEN\")\n","if auth_token:\n","    ngrok.set_auth_token(auth_token)\n","\n","public_url = ngrok.connect(8000)\n","print(f'Access the web app here: {public_url}')\n","\n","# Run Flask Server\n","if __name__ == '__main__':\n","    app.run(host='0.0.0.0', port=8000)\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1ukjkdZ4NYb-CMaxEGk7KoOkZkMt3tFmz","timestamp":1750706727934}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}